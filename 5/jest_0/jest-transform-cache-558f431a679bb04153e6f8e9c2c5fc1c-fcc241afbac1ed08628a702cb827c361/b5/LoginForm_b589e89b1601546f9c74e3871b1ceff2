ee24d6b9e115fab8257357c28c1dd202
"use strict";

var _interopRequireWildcard = require("/app/Group-A/node_modules/@babel/runtime/helpers/interopRequireWildcard.js").default;
var _interopRequireDefault = require("/app/Group-A/node_modules/@babel/runtime/helpers/interopRequireDefault.js").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
require("./LoginForm.css");
var _io = require("react-icons/io5");
var _reactRouterDom = require("react-router-dom");
var _auth = require("firebase/auth");
var _firebase = _interopRequireDefault(require("../../utils/firebase"));
var _reactToastify = require("react-toastify");
require("react-toastify/dist/ReactToastify.css");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _jsxFileName = "/app/Group-A/src/Components/LogInForm/LoginForm.jsx";
const LoginForm = () => {
  const location = (0, _reactRouterDom.useLocation)();
  const navigate = (0, _reactRouterDom.useNavigate)();
  const [email, setEmail] = (0, _react.useState)("");
  const [password, setPassword] = (0, _react.useState)("");
  const [resetEmail, setResetEmail] = (0, _react.useState)(""); // For resetting password
  const [showForgotPassword, setShowForgotPassword] = (0, _react.useState)(false); // Toggle between login and forgot password form
  const [showPassword, setShowPassword] = (0, _react.useState)(false); //showing/hiding password

  (0, _react.useEffect)(() => {
    var _location$state;
    // Show success message if redirected from signup
    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.success) {
      _reactToastify.toast.success("Sign-up successful! Please log in.", {
        position: "top-right",
        autoClose: 6000
      });
      navigate(location.pathname, {
        replace: true
      });
    }
  }, [location, navigate]);
  const handleSignUpClick = () => {
    navigate("/Signup");
  };
  const onLogin = async e => {
    e.preventDefault();
    try {
      await (0, _auth.signInWithEmailAndPassword)(_firebase.default, email, password);
      _reactToastify.toast.success("Login successful!");
      navigate("/homepage"); // Redirect to homepage on successful login
    } catch (error) {
      _reactToastify.toast.error("Invalid credentials. Please try again.");
    }
  };

  // Handle password reset
  const handleForgotPassword = async e => {
    e.preventDefault();
    if (!resetEmail) {
      _reactToastify.toast.error("Please enter your email address.");
      return;
    }
    try {
      await (0, _auth.sendPasswordResetEmail)(_firebase.default, resetEmail);
      _reactToastify.toast.success("Password reset email sent! Check your inbox.");
      setShowForgotPassword(false); // Close the forgot password form
    } catch (error) {
      console.error(error.message);
      _reactToastify.toast.error("Error sending password reset email. Please try again.");
    }
  };

  // Toggle password visibility
  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };
  return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
    className: "wrapper",
    children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
      className: "wrapper_alpha",
      children: [!showForgotPassword ? /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("form", {
        onSubmit: onLogin,
        children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("h1", {
          children: "Welcome to On-Site"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 78,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "register-link",
          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("p", {
            children: ["Don't have an account?", " ", /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("a", {
              onClick: handleSignUpClick,
              children: "Sign Up"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 82,
              columnNumber: 17
            }, void 0)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 80,
            columnNumber: 15
          }, void 0)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 79,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "input-box",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
            type: "text",
            placeholder: "Email",
            value: email,
            onChange: e => setEmail(e.target.value),
            required: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 15
          }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoMailSharp, {
            className: "icon"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 94,
            columnNumber: 15
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 86,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "input-box",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
            type: showPassword ? "text" : "password" // Toggle between password and text
            ,
            placeholder: "Password",
            value: password,
            onChange: e => setPassword(e.target.value),
            required: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 97,
            columnNumber: 15
          }, void 0), showPassword ? /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoEyeOffSharp, {
            className: "icon",
            onClick: togglePasswordVisibility
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 106,
            columnNumber: 17
          }, void 0) : /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoEyeSharp, {
            className: "icon",
            onClick: togglePasswordVisibility
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 111,
            columnNumber: 17
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 96,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "forgot",
          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("a", {
            href: "#",
            onClick: () => setShowForgotPassword(true),
            children: "Forgot password"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 118,
            columnNumber: 15
          }, void 0)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 117,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("button", {
          type: "submit",
          children: "Sign in"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 122,
          columnNumber: 13
        }, void 0)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 77,
        columnNumber: 11
      }, void 0) : /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("form", {
        onSubmit: handleForgotPassword,
        children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("h1", {
          children: "Reset Password"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 126,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("p", {
          children: "Enter your email to receive a password reset link."
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 127,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "input-box",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
            type: "email",
            placeholder: "Email",
            value: resetEmail,
            onChange: e => setResetEmail(e.target.value),
            required: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 130,
            columnNumber: 15
          }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoMailSharp, {
            className: "icon"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 15
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 129,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("button", {
          type: "submit",
          children: "Send Reset Email"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 140,
          columnNumber: 13
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("button", {
          type: "button",
          onClick: () => setShowForgotPassword(false),
          children: "Cancel"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 141,
          columnNumber: 13
        }, void 0)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 125,
        columnNumber: 11
      }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactToastify.ToastContainer, {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 146,
        columnNumber: 9
      }, void 0)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 7
    }, void 0)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 74,
    columnNumber: 5
  }, void 0);
};
var _default = exports.default = LoginForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,