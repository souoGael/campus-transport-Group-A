3eac85bf5377b9843d3b522823d10bdb
"use strict";

var _interopRequireWildcard = require("/app/Group-A/node_modules/@babel/runtime/helpers/interopRequireWildcard.js").default;
var _interopRequireDefault = require("/app/Group-A/node_modules/@babel/runtime/helpers/interopRequireDefault.js").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
require("./SignupForm.css");
var _fa = require("react-icons/fa");
var _io = require("react-icons/io5");
var _reactRouterDom = require("react-router-dom");
var _firestore = require("firebase/firestore");
var _auth = require("firebase/auth");
var _reactToastify = require("react-toastify");
require("react-toastify/dist/ReactToastify.css");
var _firebase = _interopRequireDefault(require("../../utils/firebase"));
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _jsxFileName = "/app/Group-A/src/Components/SignupForm/SignupForm.jsx";
const db = (0, _firestore.getFirestore)();
const validatePassword = password => {
  // Password must contain at least 1 uppercase letter, 1 number, 1 special character, and be at least 8 characters long
  const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;
  return passwordRegex.test(password);
};
const SignUpForm = () => {
  const navigate = (0, _reactRouterDom.useNavigate)();

  // State variables for form inputs
  const [firstName, setFirstName] = (0, _react.useState)("");
  const [lastName, setLastName] = (0, _react.useState)("");
  const [email, setEmail] = (0, _react.useState)("");
  const [password, setPassword] = (0, _react.useState)("");
  const [showPassword, setShowPassword] = (0, _react.useState)(false); // Toggle password visibility

  // Form submission handler
  const handleSubmit = async e => {
    e.preventDefault();
    if (!validatePassword(password)) {
      _reactToastify.toast.error("Password must be at least 8 characters long, include an uppercase letter, a number, and a special character.");
      return;
    }
    try {
      // Create a new user with Firebase Authentication
      const userCredential = await (0, _auth.createUserWithEmailAndPassword)(_firebase.default, email, password);

      // Send email verification
      await (0, _auth.sendEmailVerification)(userCredential.user);

      // Add the user's details to Firestore
      await (0, _firestore.setDoc)((0, _firestore.doc)(db, "Users", userCredential.user.uid), {
        firstName: firstName,
        lastName: lastName,
        email: email
      });
      _reactToastify.toast.success("Account created successfully! Please verify your email.");
      navigate("/", {
        state: {
          success: true
        }
      });
    } catch (error) {
      // Handle any errors that may occur during signup
      _reactToastify.toast.error(error.message);
    }
  };
  const handleLoginClick = () => {
    // If the user navigates to login without signing up, do not pass the success state
    navigate("/");
  };

  // Toggle password visibility
  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };
  return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
    className: "wrapper",
    children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
      className: "wrapper_alpha",
      children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("form", {
        className: "SignupForm",
        onSubmit: handleSubmit,
        children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("h1", {
          children: "Welcome to On-Site"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 84,
          columnNumber: 11
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "register-link",
          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("p", {
            children: ["Already have an account? ", /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("a", {
              onClick: handleLoginClick,
              children: "Log In"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 87,
              columnNumber: 40
            }, void 0)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 13
          }, void 0)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 85,
          columnNumber: 11
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "wrapper_beta",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
            className: "input-box-small1",
            children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
              type: "text",
              placeholder: "First name",
              value: firstName,
              onChange: e => setFirstName(e.target.value),
              required: true
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 93,
              columnNumber: 15
            }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_fa.FaRegListAlt, {
              className: "icon"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 100,
              columnNumber: 15
            }, void 0)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 92,
            columnNumber: 13
          }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
            className: "input-box-small2",
            children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
              type: "text",
              placeholder: "Last name",
              value: lastName,
              onChange: e => setLastName(e.target.value),
              required: true
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 104,
              columnNumber: 15
            }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_fa.FaRegListAlt, {
              className: "icon"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 111,
              columnNumber: 15
            }, void 0)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 103,
            columnNumber: 13
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 11
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "input-box",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
            type: "text",
            placeholder: "Email",
            value: email,
            onChange: e => setEmail(e.target.value),
            required: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 116,
            columnNumber: 13
          }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoMailSharp, {
            className: "icon"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 123,
            columnNumber: 13
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 115,
          columnNumber: 11
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("div", {
          className: "input-box",
          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("input", {
            type: showPassword ? "text" : "password" // Toggle between password and text
            ,
            placeholder: "Password",
            value: password,
            onChange: e => setPassword(e.target.value),
            required: true
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 127,
            columnNumber: 13
          }, void 0), showPassword ? /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoEyeOffSharp, {
            className: "icon",
            onClick: togglePasswordVisibility
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 136,
            columnNumber: 15
          }, void 0) : /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_io.IoEyeSharp, {
            className: "icon",
            onClick: togglePasswordVisibility
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 141,
            columnNumber: 15
          }, void 0)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 126,
          columnNumber: 11
        }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)("button", {
          type: "submit",
          children: "Sign up"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 145,
          columnNumber: 11
        }, void 0)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 83,
        columnNumber: 9
      }, void 0), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactToastify.ToastContainer, {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 148,
        columnNumber: 9
      }, void 0)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 7
    }, void 0)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 81,
    columnNumber: 5
  }, void 0);
};
var _default = exports.default = SignUpForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,